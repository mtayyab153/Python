<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 6.0.2 (Python 3.7.5 on win32)" generated="20240210 11:40:15.319" rpa="true" schemaversion="3">
<suite id="s1" name="Task" source="C:\Users\PC1\PycharmProjects\Appium\Task.robot">
<test id="s1-t1" name="Android App Automation" line="42">
<kw name="Open Chat21 Applicaiton">
<kw name="Open Application" library="AppiumLibrary">
<arg>http://localhost:4723</arg>
<arg>platformName=Android</arg>
<arg>deviceName=emulator-5554</arg>
<arg>appPackage=chat21.android.demo</arg>
<arg>appActivity=chat21.android.demo.SplashActivity</arg>
<arg>automationName=Uiautomator2</arg>
<doc>Opens a new application to given Appium server.
Capabilities of appium server, Android and iOS,
Please check https://github.com/appium/appium/blob/master/docs/en/writing-running-appium/server-args.md
| *Option*            | *Man.* | *Description*     |
| remote_url          | Yes    | Appium server url |
| alias               | no     | alias             |
| strict_ssl          | No     | allows you to send commands to an invalid certificate host like a self-signed one. |</doc>
<status status="PASS" starttime="20240210 11:40:16.138" endtime="20240210 11:40:28.593"/>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<var>${pop_up_status}</var>
<arg>Page Should Contain Element</arg>
<arg>//android.widget.Button[@text='Continue']</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<kw name="Page Should Contain Element" library="AppiumLibrary">
<arg>//android.widget.Button[@text='Continue']</arg>
<doc>Verifies that current page contains `locator` element.</doc>
<msg timestamp="20240210 11:40:31.272" level="INFO">Current page contains element '//android.widget.Button[@text='Continue']'.</msg>
<msg timestamp="20240210 11:40:31.272" level="INFO">xpath criteria: //android.widget.Button[@text='Continue']</msg>
<status status="PASS" starttime="20240210 11:40:28.593" endtime="20240210 11:40:31.272"/>
</kw>
<msg timestamp="20240210 11:40:31.272" level="INFO">${pop_up_status} = True</msg>
<status status="PASS" starttime="20240210 11:40:28.593" endtime="20240210 11:40:31.273"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${pop_up_status}'=='True'</arg>
<arg>ByePass Android 10 Popups</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="ByePass Android 10 Popups">
<kw name="Wait Until Page Contains Element" library="AppiumLibrary">
<arg>//android.widget.Button[@text='Continue']</arg>
<doc>Waits until element specified with `locator` appears on current page.</doc>
<msg timestamp="20240210 11:40:31.424" level="INFO">xpath criteria: //android.widget.Button[@text='Continue']</msg>
<status status="PASS" starttime="20240210 11:40:31.275" endtime="20240210 11:40:31.424"/>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<arg>//android.widget.Button[@text='Continue']</arg>
<doc>Click element identified by `locator`.</doc>
<msg timestamp="20240210 11:40:31.427" level="INFO">Clicking element '//android.widget.Button[@text='Continue']'.</msg>
<msg timestamp="20240210 11:40:31.712" level="INFO">xpath criteria: //android.widget.Button[@text='Continue']</msg>
<status status="PASS" starttime="20240210 11:40:31.424" endtime="20240210 11:40:31.713"/>
</kw>
<kw name="Sleep" library="BuiltIn">
<arg>3s</arg>
<doc>Pauses the test executed for the given time.</doc>
<msg timestamp="20240210 11:40:34.731" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20240210 11:40:31.713" endtime="20240210 11:40:34.733"/>
</kw>
<kw name="Wait Until Page Contains Element" library="AppiumLibrary">
<arg>//android.widget.Button[@text='OK']</arg>
<doc>Waits until element specified with `locator` appears on current page.</doc>
<msg timestamp="20240210 11:40:37.116" level="INFO">xpath criteria: //android.widget.Button[@text='OK']</msg>
<status status="PASS" starttime="20240210 11:40:34.736" endtime="20240210 11:40:37.116"/>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<arg>//android.widget.Button[@text='OK']</arg>
<doc>Click element identified by `locator`.</doc>
<msg timestamp="20240210 11:40:37.118" level="INFO">Clicking element '//android.widget.Button[@text='OK']'.</msg>
<msg timestamp="20240210 11:40:37.435" level="INFO">xpath criteria: //android.widget.Button[@text='OK']</msg>
<status status="PASS" starttime="20240210 11:40:37.116" endtime="20240210 11:40:37.435"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>Hi</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20240210 11:40:37.436" level="INFO">Hi</msg>
<status status="PASS" starttime="20240210 11:40:37.435" endtime="20240210 11:40:37.436"/>
</kw>
<status status="PASS" starttime="20240210 11:40:31.274" endtime="20240210 11:40:37.436"/>
</kw>
<status status="PASS" starttime="20240210 11:40:31.273" endtime="20240210 11:40:37.437"/>
</kw>
<status status="PASS" starttime="20240210 11:40:16.138" endtime="20240210 11:40:37.437"/>
</kw>
<kw name="Login to Chat21 App">
<kw name="Wait Until Page Contains Element" library="AppiumLibrary">
<arg>id=chat21.android.demo:id/email</arg>
<doc>Waits until element specified with `locator` appears on current page.</doc>
<msg timestamp="20240210 11:40:38.167" level="INFO">criteria is chat21.android.demo:id/email</msg>
<status status="PASS" starttime="20240210 11:40:37.439" endtime="20240210 11:40:38.167"/>
</kw>
<kw name="Input Text" library="AppiumLibrary">
<arg>id=chat21.android.demo:id/email</arg>
<arg>testing1@gmail.com</arg>
<doc>Types the given `text` into text field identified by `locator`.</doc>
<msg timestamp="20240210 11:40:38.174" level="INFO">Typing text 'testing1@gmail.com' into text field 'id=chat21.android.demo:id/email'</msg>
<msg timestamp="20240210 11:40:38.390" level="INFO">criteria is chat21.android.demo:id/email</msg>
<status status="PASS" starttime="20240210 11:40:38.168" endtime="20240210 11:40:38.390"/>
</kw>
<kw name="Input Password" library="AppiumLibrary">
<arg>id=chat21.android.demo:id/password</arg>
<arg>testing1</arg>
<doc>Types the given password into text field identified by `locator`.</doc>
<msg timestamp="20240210 11:40:38.399" level="INFO">Typing password into text field 'id=chat21.android.demo:id/password'</msg>
<msg timestamp="20240210 11:40:39.115" level="INFO">criteria is chat21.android.demo:id/password</msg>
<status status="PASS" starttime="20240210 11:40:38.391" endtime="20240210 11:40:39.115"/>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<arg>id=chat21.android.demo:id/login</arg>
<doc>Click element identified by `locator`.</doc>
<msg timestamp="20240210 11:40:39.119" level="INFO">Clicking element 'id=chat21.android.demo:id/login'.</msg>
<msg timestamp="20240210 11:40:39.769" level="INFO">criteria is chat21.android.demo:id/login</msg>
<status status="PASS" starttime="20240210 11:40:39.116" endtime="20240210 11:40:39.769"/>
</kw>
<kw name="Wait Until Page Contains Element" library="AppiumLibrary">
<arg>//android.widget.Button[@text='SELECT A CONTACT']</arg>
<arg>20s</arg>
<doc>Waits until element specified with `locator` appears on current page.</doc>
<msg timestamp="20240210 11:40:49.258" level="INFO">xpath criteria: //android.widget.Button[@text='SELECT A CONTACT']
xpath criteria: //android.widget.Button[@text='SELECT A CONTACT']
xpath criteria: //android.widget.Button[@text='SELECT A CONTACT']
xpath criteria: //android.widget.Button[@text='SELECT A CONTACT']
xpath criteria: //android.widget.Button[@text='SELECT A CONTACT']
xpath criteria: //android.widget.Button[@text='SELECT A CONTACT']
xpath criteria: //android.widget.Button[@text='SELECT A CONTACT']
xpath criteria: //android.widget.Button[@text='SELECT A CONTACT']
xpath criteria: //android.widget.Button[@text='SELECT A CONTACT']
xpath criteria: //android.widget.Button[@text='SELECT A CONTACT']
xpath criteria: //android.widget.Button[@text='SELECT A CONTACT']
xpath criteria: //android.widget.Button[@text='SELECT A CONTACT']
xpath criteria: //android.widget.Button[@text='SELECT A CONTACT']
xpath criteria: //android.widget.Button[@text='SELECT A CONTACT']
xpath criteria: //android.widget.Button[@text='SELECT A CONTACT']
xpath criteria: //android.widget.Button[@text='SELECT A CONTACT']
xpath criteria: //android.widget.Button[@text='SELECT A CONTACT']</msg>
<status status="PASS" starttime="20240210 11:40:39.770" endtime="20240210 11:40:49.259"/>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<arg>//android.widget.TextView[@text='PROFILE']</arg>
<doc>Click element identified by `locator`.</doc>
<msg timestamp="20240210 11:40:49.264" level="INFO">Clicking element '//android.widget.TextView[@text='PROFILE']'.</msg>
<msg timestamp="20240210 11:40:49.594" level="INFO">xpath criteria: //android.widget.TextView[@text='PROFILE']</msg>
<status status="PASS" starttime="20240210 11:40:49.259" endtime="20240210 11:40:49.594"/>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<arg>id=chat21.android.demo:id/logout</arg>
<doc>Click element identified by `locator`.</doc>
<msg timestamp="20240210 11:40:49.600" level="INFO">Clicking element 'id=chat21.android.demo:id/logout'.</msg>
<msg timestamp="20240210 11:40:50.755" level="INFO">criteria is chat21.android.demo:id/logout</msg>
<status status="PASS" starttime="20240210 11:40:49.594" endtime="20240210 11:40:50.755"/>
</kw>
<kw name="Wait Until Page Contains Element" library="AppiumLibrary">
<arg>id=chat21.android.demo:id/email</arg>
<doc>Waits until element specified with `locator` appears on current page.</doc>
<msg timestamp="20240210 11:40:51.900" level="INFO">criteria is chat21.android.demo:id/email</msg>
<status status="PASS" starttime="20240210 11:40:50.756" endtime="20240210 11:40:51.901"/>
</kw>
<kw name="Input Text" library="AppiumLibrary">
<arg>id=chat21.android.demo:id/email</arg>
<arg>testing3@gmail.com</arg>
<doc>Types the given `text` into text field identified by `locator`.</doc>
<msg timestamp="20240210 11:40:51.907" level="INFO">Typing text 'testing3@gmail.com' into text field 'id=chat21.android.demo:id/email'</msg>
<kw name="Capture Page Screenshot" library="AppiumLibrary">
<doc>Takes a screenshot of the current page and embeds it into the log.</doc>
<msg timestamp="20240210 11:40:55.144" level="INFO" html="true">&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td colspan="3"&gt;&lt;img src="data:image/png;base64, " width="800px"&gt;</msg>
<status status="PASS" starttime="20240210 11:40:53.800" endtime="20240210 11:40:55.146"/>
</kw>
<msg timestamp="20240210 11:40:55.146" level="INFO">criteria is chat21.android.demo:id/email</msg>
<msg timestamp="20240210 11:40:55.146" level="FAIL">StaleElementReferenceException: Message: Cached elements 'By.id: chat21.android.demo:id/email' do not exist in DOM anymore; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception
Stacktrace:
io.appium.uiautomator2.common.exceptions.StaleElementReferenceException: Cached elements 'By.id: chat21.android.demo:id/email' do not exist in DOM anymore
	at io.appium.uiautomator2.model.ElementsCache.restore(ElementsCache.java:78)
	at io.appium.uiautomator2.model.ElementsCache.get(ElementsCache.java:153)
	at io.appium.uiautomator2.handler.SendKeysToElement.safeHandle(SendKeysToElement.java:104)
	at io.appium.uiautomator2.handler.request.SafeRequestHandler.handle(SafeRequestHandler.java:59)
	at io.appium.uiautomator2.server.AppiumServlet.handleRequest(AppiumServlet.java:277)
	at io.appium.uiautomator2.server.AppiumServlet.handleHttpRequest(AppiumServlet.java:271)
	at io.appium.uiautomator2.http.ServerHandler.channelRead(ServerHandler.java:77)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)
	at io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)
	at io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:435)
	at io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:293)
	at io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:267)
	at io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:250)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)
	at io.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:266)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:345)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1294)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:911)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:131)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:611)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:552)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:466)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:438)
	at io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:140)
	at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:144)
	at java.lang.Thread.run(Thread.java:919)
</msg>
<status status="FAIL" starttime="20240210 11:40:51.901" endtime="20240210 11:40:55.151"/>
</kw>
<kw name="Input Password" library="AppiumLibrary">
<arg>id=chat21.android.demo:id/password</arg>
<arg>testing3</arg>
<doc>Types the given password into text field identified by `locator`.</doc>
<status status="NOT RUN" starttime="20240210 11:40:55.151" endtime="20240210 11:40:55.151"/>
</kw>
<kw name="Click Element" library="AppiumLibrary">
<arg>id=chat21.android.demo:id/login</arg>
<doc>Click element identified by `locator`.</doc>
<status status="NOT RUN" starttime="20240210 11:40:55.151" endtime="20240210 11:40:55.151"/>
</kw>
<kw name="Wait Until Page Contains Element" library="AppiumLibrary">
<arg>//android.widget.Button[@text='SELECT A CONTACT']</arg>
<arg>20s</arg>
<doc>Waits until element specified with `locator` appears on current page.</doc>
<status status="NOT RUN" starttime="20240210 11:40:55.152" endtime="20240210 11:40:55.152"/>
</kw>
<status status="FAIL" starttime="20240210 11:40:37.439" endtime="20240210 11:40:55.152"/>
</kw>
<status status="FAIL" starttime="20240210 11:40:16.137" endtime="20240210 11:40:55.154">StaleElementReferenceException: Message: Cached elements 'By.id: chat21.android.demo:id/email' do not exist in DOM anymore; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception
Stacktrace:
io.appium.uiautomator2.common.exceptions.StaleElementReferenceException: Cached elements 'By.id: chat21.android.demo:id/email' do not exist in DOM anymore
	at io.appium.uiautomator2.model.ElementsCache.restore(ElementsCache.java:78)
	at io.appium.uiautomator2.model.ElementsCache.get(ElementsCache.java:153)
	at io.appium.uiautomator2.handler.SendKeysToElement.safeHandle(SendKeysToElement.java:104)
	at io.appium.uiautomator2.handler.request.SafeRequestHandler.handle(SafeRequestHandler.java:59)
	at io.appium.uiautomator2.server.AppiumServlet.handleRequest(AppiumServlet.java:277)
	at io.appium.uiautomator2.server.AppiumServlet.handleHttpRequest(AppiumServlet.java:271)
	at io.appium.uiautomator2.http.ServerHandler.channelRead(ServerHandler.java:77)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(Abstra...
    [ Message content over the limit has been removed. ]
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:366)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:352)
	at io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:911)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:131)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:611)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:552)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:466)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:438)
	at io.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:140)
	at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:144)
	at java.lang.Thread.run(Thread.java:919)</status>
</test>
<status status="FAIL" starttime="20240210 11:40:15.373" endtime="20240210 11:40:55.165"/>
</suite>
<statistics>
<total>
<stat pass="0" fail="1" skip="0">All Tasks</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="0" fail="1" skip="0" id="s1" name="Task">Task</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
